[{"D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\App.js":"1","D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\FirebaseJobList.js":"2","D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\reportWebVitals.js":"3","D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\NewJob.js":"4","D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\index.js":"5","D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\NewUserForms.js":"6","D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\firebase.js":"7"},{"size":15963,"mtime":1610408447518,"results":"8","hashOfConfig":"9"},{"size":3202,"mtime":1610405684330,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1610150553408,"results":"11","hashOfConfig":"9"},{"size":5935,"mtime":1610407358927,"results":"12","hashOfConfig":"9"},{"size":469,"mtime":1610150553318,"results":"13","hashOfConfig":"9"},{"size":8104,"mtime":1610350401938,"results":"14","hashOfConfig":"9"},{"size":573,"mtime":1610207935992,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wpbmun",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\App.js",["31","32","33"],"D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\FirebaseJobList.js",[],"D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\reportWebVitals.js",[],"D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\NewJob.js",["34","35","36","37"],"import { Component } from 'react';\r\nimport parse from 'html-react-parser';\r\nimport firebase from './firebase';\r\n\r\n\r\nclass NewJob extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            itemInWishList: false,\r\n            itemAlreadyInList: false, \r\n            idWishlist: '',\r\n            titleWishlist: '',\r\n            companyWishlist: '',\r\n            jobUrlWishlist: '',\r\n        }\r\n    }\r\n\r\n\r\n    // Add a job to Wish List Firebase\r\n    addToWishlist(thisId, jobTitle, company, jobUrl) {\r\n        if (!company || company == \"\") {company = \"---\"}\r\n        if (!jobTitle || jobTitle == \"\") { jobTitle = \"---\" }\r\n        if (!jobUrl || jobUrl == \"\") { jobUrl = `<a href=\"#\"></a>` }\r\n            this.setState({\r\n                idWishlist: thisId,\r\n                titleWishlist: jobTitle, \r\n                companyWishlist: company,\r\n                jobUrlWishlist: jobUrl,\r\n                itemInWishList: false,\r\n                itemAlreadyInList: false\r\n            }, () => {\r\n                    // Check if the job is already on the Wish list\r\n                    const ref = firebase.database().ref(`${this.props.passUserId}`);\r\n                    ref.once(\"value\")\r\n                        .then((snapshot) => {\r\n                            let itemIsAlreadyInWishlist = snapshot.child(`${idWishlist}`).exists();\r\n                            //true or false\r\n                            // Show a message if job was added or is already on the list, hide after a while\r\n                            if (itemIsAlreadyInWishlist) {\r\n                                this.setState({\r\n                                    itemAlreadyInList: true\r\n                                });\r\n                                setTimeout(() => {\r\n                                    this.setState({\r\n                                        itemAlreadyInList: false\r\n                                    });\r\n                                }, 2000);\r\n                            }\r\n                            else {\r\n                                this.setState({\r\n                                    itemInWishList: true\r\n                                });\r\n                                setTimeout(() => {\r\n                                    this.setState({\r\n                                        itemInWishList: false\r\n                                    });\r\n                                }, 2500);\r\n                            }\r\n                        });\r\n                    // If id exists in Firebase, don't add new item\r\n                    const { idWishlist, titleWishlist, companyWishlist, jobUrlWishlist } = this.state;\r\n                    const firebaseRef = firebase.database().ref(`${this.props.passUserId}`).child(idWishlist);\r\n                    firebaseRef.set({\r\n                        jobKey: idWishlist,\r\n                        jobTitle: titleWishlist,\r\n                        company: companyWishlist,\r\n                        jobUrl: jobUrlWishlist,\r\n                    });\r\n                });\r\n    }\r\n\r\n    // Show more info on button click\r\n    showData(showThisId) {\r\n        this.setState({\r\n            visible: !this.state.visible,\r\n            idCliked: showThisId\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { keyId, jobTitle, company, category, time, description, jobUrl, contract, classIndex } = this.props;\r\n        return (\r\n            <div className={classIndex} >\r\n                {/* Show message if item was added or is already on the list */}\r\n                <div className=\"wishListManage\">\r\n                    {this.state.itemInWishList ? <h6>item added</h6> : null}\r\n                    {this.state.itemAlreadyInList ? <h6>item is already on list</h6> : null}\r\n                </div>\r\n                {/* Use PARSE to avoid <strong> tags comming from API */}\r\n                {/* Ensure that fields exist */}\r\n                {/* Adjust empty fields */}\r\n                {/* If category is Unknown, don't show it on the page */}\r\n                <div className=\"jobDescription\">\r\n                    <div className=\"title\">\r\n                        {jobTitle && jobTitle !== \"\" ? <h2>{parse(jobTitle)}</h2> : <h2>Other Jobs</h2>}\r\n                        {category !== \"Unknown\" && category && category !== \"\" ? <h5>{parse(category)}</h5> : null}\r\n                    </div>\r\n                    <div className=\"company\">\r\n                        {company && company !== \"\" ? <h3>{parse(company)}</h3> : <h3>---</h3>}\r\n                        {contract && contract !== \"\" ? <h4>{parse(contract)}</h4> : null}\r\n                    </div>\r\n                    <div className=\"buttonsInfo\">\r\n                        {/* Show/Hide Description on Button Click */}\r\n                        <button className=\"showDetails\" onClick={() => this.showData(keyId)}>{this.state.visible ? 'Hide Details' : 'Show Details'}</button>\r\n                        {/* Add to Wish List Button, show onl when logged in, otherise a message */}\r\n                        {(this.props.passUserId != null ? <button className=\"saveForLater\" onClick={() => this.addToWishlist(keyId, jobTitle, company, jobUrl)}>Save For Later</button> : null )}\r\n                    </div>\r\n                </div>\r\n                {this.state.visible && this.state.idCliked == keyId ? \r\n                <div className=\"description\">\r\n                    <div>\r\n                        {description && description !== \"\" ? <p>{parse(description)}</p> : <p>No Description</p>}\r\n                        {time && time !== \"\" ? <time dateTime={time.split('T')[0]}>Date Created: {time.split('T')[0]}</time> : null}\r\n                    </div>\r\n                        {jobUrl && jobUrl !== \"\" ? <a href={jobUrl}>Read More & Apply</a> : null }\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewJob;","D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\index.js",[],"D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\NewUserForms.js",[],"D:\\webDevelopment\\bootcamp\\project5\\inga-locmele-project-five-\\src\\firebase.js",[],{"ruleId":"38","severity":1,"message":"39","line":143,"column":51,"nodeType":"40","messageId":"41","endLine":143,"endColumn":53},{"ruleId":"38","severity":1,"message":"39","line":157,"column":49,"nodeType":"40","messageId":"41","endLine":157,"endColumn":51},{"ruleId":"38","severity":1,"message":"39","line":163,"column":35,"nodeType":"40","messageId":"41","endLine":163,"endColumn":37},{"ruleId":"38","severity":1,"message":"39","line":23,"column":33,"nodeType":"40","messageId":"41","endLine":23,"endColumn":35},{"ruleId":"38","severity":1,"message":"39","line":24,"column":35,"nodeType":"40","messageId":"41","endLine":24,"endColumn":37},{"ruleId":"38","severity":1,"message":"39","line":25,"column":31,"nodeType":"40","messageId":"41","endLine":25,"endColumn":33},{"ruleId":"38","severity":1,"message":"39","line":111,"column":60,"nodeType":"40","messageId":"41","endLine":111,"endColumn":62},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]